<link rel="stylesheet" href="bootstrap/css/bootstrap-table.css" />
<script src="bootstrap/js/bootstrap-table.js"></script>
<script src="bootstrap/js/bootstrap-table-zh-CN.js"></script>  

【jQuery 表单重置 $("#表单id名)[0].reset()】

模态框显示与隐藏
	1）js ：
		$("#模态框id").modal("show|hide");
	2）html中
		<button ... data-dismiss="modal">.../button>   点击按钮模态框关闭
		<button ... data-toggle="modal" data-target="#addWindow"> .. </button> 点击按钮更改模态框的显示与关闭

1.  body 中准备好<table id="?"></table>
		参考代码 ：
		  <div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">查询条件</h3>
					<form>查询条件设置表单</form>
				</div>
				<div class="panel-body">
					<div id="toolbar">工具栏设定</div>
					<table id="userTable"></table>
				</div>
			</div>
2. js中进行初始化
	$("#tableId").bootstrapTable({
			url : '?' ,
			method : 'get' ,
			toolbar : '#?' ,   // 为表格绑定工具栏
			striped: true,			// 显示为斑马线格式，奇偶行不通背景色

			showRefresh: "true",	// 显示刷新按钮
			showToggle: "true",		// 显示格式切换按钮
			showColumns: "true",	// 显示列过滤按钮	

			// 分页相关 ，如果分页，服務器端返回的数据需要包含有total属性和rows属性
			pagination: true,		// 显示分页
			pageNumber: 1,			// 初始化加载第一页
			pageSize: 2,			// 每页2条数据
			pageList: [2, 5, 10],	// 可以选择的每页数量
			sidePagination: "server", //表示服务端请求分页数据 
			
			// 排序有关					
			sortName : '?' ,
			sortOrder : 'desc | asc' ,
			
			// 提交到Server的参数列表 ， 
			// 参数设定相关
			queryParamsType: "undefined",  // undefined：提交到服务器端的参数自定义
			queryParams: function(params) {
				// 参数params中自带 pageSize , pageNumber , sortName , sortOrder
								
				// 为params对象增加额外三个属性
				params.nameKey = $.trim($("#search_uname").val()) ;
				params.emailKey = $.trim($("#search_email").val()) ;
				params.status = $('#formSearch input[name="status"]:checked').val() ;
				console.dir(params) ;
				return params ;
				
			},

			
			columns : [
				{ checkbox : true} ,   // 显示为复选框
				{field : '?' , title : '?'} ,
				{field : '?' , title : '?' , sortable : true} ,
				...
				{field : '?' ,title : '?' , 
    				formatter : function(value , row , index){   // 对该列值进行加工处理
						return ....
					}
				} ,
				{	title : '?' ,									// 不能有field属性，不然events不起作用
   					formatter: operateFormatter,   	// 使用叫做operateFormatter函数来设置该列所显示的内容
					events: operateEvents ,				// 设置该列按照class名称加载相应的用户动作，动作描述在window.operateEvents函数中
    			}
			] ,
		});
4. 当bootstrap-table分页时，服务器端返回到页面的json数据需要包含2个属性：total与rows
5.  table刷新
	$("#userTable").bootstrapTable('refresh') ;
6. 获取表格中所有checkbox选中项
	var rows = $("#?Table").bootstrapTable('getSelections');
7. 其他		
		// 如果有条件检索按钮，只需要调用bootstrapTable刷新即可
				$("#searchBtn?").click(function() {
					$("#tableId?").bootstrapTable('refresh');
				});
		// 如 ：行最后列自定义显示
		function operateFormatter(value, row, index) {
			
			var update = '<button  type="button" class="edit btn btn-xs btn-info"' +
			'<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改' +
			'</button>&nbsp;&nbsp;';
			var del = '<button  type="button" class="remove btn btn-xs btn-danger"' +
				'<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除' +
				'</button>';
			return update + del;
		 }	
		 // 如：
		window.operateEvents = { 
						// click表示绑定click动作，   .edit 表示为class是edit的元素绑定事件 【注意中间的空格】
					 'click .edit' : function(e , value , row , index) {
						 $("#editWindow #edit_name").val(row.name) ;
						 $("#editWindow #edit_email").val(row.email) ;
						 $("#editWindow #edit_phone").val(row.phone) ;
						 $("#editWindow #editId").val(row.id) ;
						 $("#editWindow").modal("show") ;
					 } ,
					 'click .remove' : function(e , value , row , index) {
					 	$("#confirmDialog_delone").modal("show") ;
					 	$("#delOneBtn").click(function(){
					 		$.post( "userDel.action", 
									{userId: row.id},
									function(data) {
										if(data.result == 1) {
											$("#confirmDialog_delone").modal("hide") ;
											$("#alertDialog_ok").modal("show") ;
											$("#userTable").bootstrapTable('refresh');
										}
									}
							);
					 	}) ;
					 }
			 }
			 
	参考：查询条件中表单
	<form id="formSearch" class="form-horizontal">
		<div class="form-group" style="margin-top:15px">
			<label class="control-label col-md-1" for="search_uname">用户名</label>
			<div class="col-md-2">
				<input type="text" class="form-control" id="search_uname">
			</div>
			<label class="control-label col-md-1" for="search_email">电子邮件</label>
			<div class="col-md-2">
				<input type="text" class="form-control" id="search_email">
			</div>
			<label class="control-label col-md-1" for="status">是否激活</label>
			<div class="radio  col-md-2">
				<label><input type="radio" name="status" id="status" value="" checked>忽略 </label>
				<label><input type="radio" name="status" value="1">是</label>
				<label><input type="radio" name="status" value="0">否 </label>
			</div>
			<div class="col-md-3" style="text-align:left;">
				<button type="button" style="margin-left:50px" id="btn_query" class="btn btn-primary">查询</button>
			</div>
		</div>
	</form>
	參考：表格的工具栏设定
					<div id="toolbar" class="btn-group">
						<button id="btn_add" type="button" class="btn btn-default" data-toggle="modal" data-target="#addWindow">
				 			<span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
						</button>						
						<button id="btn_delete" type="button" class="btn btn-default">
				 			<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
				 		</button>
					</div>	

	
	function operateFormatter(value, row, index) {
		var update = '<button type="button" class="edit btn btn-xs btn-primary"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改</button>&nbsp;&nbsp;';
		var del = '<button type="button" class="remove btn btn-xs btn-danger"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>删除</button>';
		return update + del;
	}
	window.operateEvents = {
		'click .edit' : function(e, value, row, index) {
			alert('edit' + index) ;
		},
		'click .remove' : function(e, value, row, index) {
			alert("del" + index)
		}
	};